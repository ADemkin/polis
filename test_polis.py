import unittest
import run as impo


class TestStringMethods(unittest.TestCase):

    def test_isupper(self):
        self.assertTrue('FOO'.isupper())
        

    def test_balkany(self):
        s = "Договор участия в долевом строительстве жилого многоквартирного дома по адресу: Санкт-Петербург, Будапештская улица, дом 102, литера А oт 14.11.2016 №134нп-БАЛ/12-15Г"
        e = {impo.DDU_DOC_DESC_DATE  :'14.11.2016',
             impo.DDU_DOC_DESC_NUMBER:"№134нп-БАЛ/12-15Г",
             impo.DOGOVOR_TYPE       :'ДДУ'}
        self.assertEqual(impo.extractDduDocDesc(s), e)
        s = "Договор уступки прав oт 28.06.2016; Договор участия в долевом строительстве жилого многоквартирного дома oт 11.12.2015 №9Н-БАЛ/12-15Г, дата регистрации 04.02.2016, №78-78/036-78/115/202/2015-81/1"
        e = {impo.DDU_DATE           :'04.02.2016',
             impo.DDU_DOC_DESC_DATE  :'11.12.2015',
             impo.DDU_DOC_DESC_NUMBER:"№9Н-БАЛ/12-15Г",
             impo.DOGOVOR_TYPE       :'Уступка'}
        self.assertEqual(impo.extractDduDocDesc(s), e)


    def test_generic(self):
        s = "Договор участия в долевом строительстве oт 28.01.2014 №5823/0114-М10"
        e = {impo.DDU_DOC_DESC_DATE  :'28.01.2014',
             impo.DDU_DOC_DESC_NUMBER:"№5823/0114-М10",
             impo.DOGOVOR_TYPE       :'ДДУ'}
        self.assertEqual(impo.extractDduDocDesc(s), e)
        s = "Договор №44458/0415-ТВ3 участия в долевом строительстве oт 08.04.2015"
        e = {impo.DDU_DOC_DESC_DATE  :'08.04.2015',
             impo.DDU_DOC_DESC_NUMBER:"№44458/0415-ТВ3",
             impo.DOGOVOR_TYPE       :'ДДУ'}
        self.assertEqual(impo.extractDduDocDesc(s), e)
        s = "Договор долевого участия oт 30.03.2017 №11382/0317-ТВ1"
        e = {impo.DDU_DOC_DESC_DATE  :'30.03.2017',
             impo.DDU_DOC_DESC_NUMBER:"№11382/0317-ТВ1",
             impo.DOGOVOR_TYPE       :'ДДУ'}
        self.assertEqual(impo.extractDduDocDesc(s), e)
        s = "Дополнительное соглашение oт 30.07.2014"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "30.07.2014")
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "")  # was None
        s = "Соглашение об уступке прав oт 20.04.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "20.04.2017")
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "")  # was None
        s = "Соглашение о замене стороны в Договоре № 51790/0116-ТВ2 от 29 января 2016 г. участия в долевом строительстве oт 22.09.2016; Договор участия в долевом строительстве oт 29.01.2016 №51790/0116-ТВ2, дата регистрации 13.04.2016, №78-78/038-78/052/202/2016-161/1"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "29.01.2016")
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№51790/0116-ТВ2")
        s = "Соглашение о замене стороны oт 12.05.2014"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "12.05.2014")
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "")  # was None


    def test_primorsky_2(self):
        s = "Соглашение об уступке прав и обязанностей oт 10.10.2016; Договор участия в долевом строительстве oт 30.04.2016 №2.2/1/12/М, дата регистрации 15.06.2016, №78-78/038-78/064/203/2016-276/1"
        e = {impo.DDU_DATE           :'15.06.2016',
             impo.DDU_DOC_DESC_DATE  :'30.04.2016',
             impo.DDU_DOC_DESC_NUMBER:'№2.2/1/12/М',
             impo.DOGOVOR_TYPE       :'Уступка'}
        self.assertEqual(impo.extractDduDocDesc(s), e)


    def test_romantic(self):
        s = "Соглашение об уступке права требования oт 14.09.2016 №14/09/2016-ЯР-3-794-У; Договор  участия в долевом строительстве oт 03.10.2014 №03/10/2014-ЯР-3-794, дата регистрации 14.10.2014, №78-78-55/101/2014-139"
        e = {impo.DDU_DATE           :'14.10.2014',
             impo.DDU_DOC_DESC_DATE  :'03.10.2014',
             impo.DDU_DOC_DESC_NUMBER:'№03/10/2014-ЯР-3-794',
             impo.DOGOVOR_TYPE       :'Уступка'}
        self.assertEqual(impo.extractDduDocDesc(s), e)
        s = "Соглашение о замене стороны oт 25.09.2015; Договор  участия в долевом строительстве oт 03.04.2015 №44353/0415-ТВ2, дата регистрации 30.06.2015, №78-78/038-78/052/011/2015-86/1"
        e = {impo.DDU_DATE           :'30.06.2015',
             impo.DDU_DOC_DESC_DATE  :'03.04.2015',
             impo.DDU_DOC_DESC_NUMBER:'№44353/0415-ТВ2',
             impo.DOGOVOR_TYPE       :'Уступка'}
        self.assertEqual(impo.extractDduDocDesc(s), e)
        s = "Соглашение об уступке oт 07.12.2016 №07/12/2016-ЯР-3-20-Н-У; Соглашение об уступке прав требования oт 08.12.2016 №08/12/2016-ЯР-3-37-Н-У, дата регистрации 17.03.2017, №78:43:0000000:10-78/033/2017-566"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(impo.DDU_DATE not in res, True)
        s = """Соглашение о замене стороны в Договоре №42527/1214-ЮШ13 от 15.12.2014 участи я в долевом строительстве oт 22.08.2016;
               Договор участия в долевом строительстве oт 15.12.2014 №42527/1214-ЮШ13, дата регистрации 30.12.2014, №78-78-36/055/2014-454"""
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№42527/1214-ЮШ13")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "15.12.2014")
        s = """Соглашение об уступке права требования и обязанностей oт 17.03.2016 №17/03/2016-ЯР-3-538-У;
               Договор участия в долевом строительстве жилого комплекса oт 03.12.2014 №03/12/2014-ЯР-3-538, дата регистрации 12.12.2014, №78-78-33/051/2014-274"""
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№03/12/2014-ЯР-3-538")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "03.12.2014")
        s = """СОГЛАШЕНИЕ об уступке права oт 21.02.2017 №21/02/2017-ЯР-1-682-У;
               Договор участия в долевом строительстве жилого комплекса oт 08.08.2015 №08/08/2015-ЯР-1-682, дата регистрации 01.09.2015, №78-78/033-78/033/100/2015-2373/1"""
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№08/08/2015-ЯР-1-682")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "08.08.2015")
        s = """Соглашение об уступке права требования и обязанностей по договору № 14/04/2015-ЯР-2-719 участия в долевом строительстве жилого комплекса от 14.04.2015 oт 02.11.2015 №02/11/2015-ЯР-2-719-У;
               Договор участия в долевом строительстве жилого комплекса oт 14.04.2015 №14/04/2015-ЯР-2-719, дата регистрации 21.05.2015, №78-78/033-78/033/100/2015-937/1"""
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№14/04/2015-ЯР-2-719")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "14.04.2015")
        s = """Соглашение об уступке права требования oт 13.12.2016 №13/12/2016-ЯР-1-2-П-У;
               Соглашение об уступке прав требования oт 12.02.2017 №12/02/2017-ЯР-1-33-П-У, дата регистрации 17.03.2017, №78:43:0000000:10-78/033/2017-570"""
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№13/12/2016-ЯР-1-2-П-У")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "13.12.2016")


    def test_address(self):
        s = "Объект долевого строительства: Двухкомнатная квартира, строительный номер 14-92Б, подъезд 1, этаж 9, общая площадь 69,30 кв.м. Строительные оси &quot;1-5, А-Г/Д&quot;. Строительный адрес: г. Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 14."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], "9")
        self.assertEqual(res[impo.OBJECT_NUMBER], '="14-92Б"')
        self.assertEqual(res[impo.CORPUS], '="14"')
        self.assertEqual(res[impo.ADRESS], "г. Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 14")
        s = "Объект долевого строительства: однокомнатная квартира, корпус 3, секция 1.1, номер этажа: 13, номер объекта: 119, проектная (планируемая) площадь: 27,37 кв.м в осях: ГГ/3-ББ/3; 10/3-11-3 с прим. к оси 12/3, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25)"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], "27,37")
        self.assertEqual(res[impo.CORPUS], '="3"')
        self.assertEqual(res[impo.SECTION], '="1.1"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 9, номер объекта: 1131, проектная (планируемая площадь: 24,29 кв.м, местоположение: Санкт-Петербург, тер.предприятия Предпортовый, участок 3.2 (Ленинские искры), секция 7, строительные оси 23.7с-25.7с; Г.7с-Е.7с"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], "24,29")
        s = """Объект долевого строительства: Пятикомнатная квартира, номер этажа: 13, номер объекта: 126, проектная (планируемая) площадь: 146,27 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151,
            (квартал 66А Северо-Приморской части Приморского административного района), блок 3.1, подъезд 3(секция2), в осях 21/4-26/1, А-Г/1."""
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "3")
        self.assertEqual(res[impo.SECTION], '="2"')
        s = "Объект долевого строительства: Однокомнатная квартира, подъезд 1, номер этажа: 5, номер объекта: 31-51В, проектная (планируемая) площадь: 39,25 кв.м, строительные оси: &quot;20-23; А-В&quot;. Местоположение: город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 3."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ADRESS], "город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 3")
        s = "Объект долевого строительства: Двухкомнатная квартира, подъезд 1, номер этажа 12, номер объекта 17-122А, проектная (планируемая) площадь 65,6 кв.м., строительные оси: &quot;4-7; А-Г&quot;. Местоположение: город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 17."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], "65,6")
        s = "кта: 142Н, проектная (планируемая) площадь:3,97 кв.м, местоп"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], "3,97")
        s = "Объект долевого строительства: Двухкомнатная квартира, подъезд 1, номер этажа 12, номер объекта 17-122А, проектная (планируемая) площадь 65,6 кв.м., строительные оси: &quot;4-7; А-Г&quot;. Местоположение: город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 17."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.OBJECT_NUMBER], '="17-122А"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 4, условный номер 2738, проектная (планируемая) площадь: 35,79 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия &quot;Предпортовый&quot;, уч.180, (Ленинские искры), оси: 21-25, А-Г, секц. 22"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.OBJECT_NUMBER], '="2738"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер 473 этажа: 1, проектная (планируемая) площадь: 53,43 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25),корп. 2, секция 4, в осях: С/2-М/2, 35/2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.OBJECT_NUMBER], '="473"')
        self.assertEqual(res[impo.FLOOR], "1")
        s = "Объект долевого строительства : Нежилое помещение, студия, номер этажа: 5, номер объекта: 331, проектная (планируемая) площадь: 31,62 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок 1, апартамент, тип ст, в осях Л-Н 10 11"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], "нежилое помещение студия")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 2, номер объекта: 007, проектная (планируемая) площадь: 37,1 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе), корпус -13,  подъезд/секция - 1,  в осях 15с-17с, Ас-Дс."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="13"')
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Апартамент, номер этажа: 9, номер объекта: 243-244, проектная (планируемая) площадь: 95,66 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок : 1, тип: 3Б, в осях: П-М/1-3"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: Квартира-студия, номер этажа: 4, номер объекта: 118, проектная (планируемая) площадь: 31,52 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок №1, тип Ст, в стр.осях Л-Н/4-5"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: Трехкомнатная квартира, номер этажа: 9, номер объекта: 51-93А, проектная (планируемая) площадь: 87,6 кв.м, местоположение: город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж,4 очередь,5 корпус подъезд 1,в осях &quot;9-11,А-Ж&quot;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="5"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 9, номер объекта: 124, проектная (планируемая) площадь: 39 кв.м, местоположение: Санкт-Петербург, Петроградский район, Петровский просп, д.20, лит.Н, подъезд №2, в осях 15-19/Ж-Л"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "2")
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 19, номер объекта: 186, проектная (планируемая) площадь: 63,2 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе), пус -15,  подъезд/секция -1,  в осях 15с-19с, Ис-Эс."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="15"')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 4, номер объекта: 319, проектная (планируемая) площадь: 30,67 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок 1, тип ст, апартаменты, оси М-П/13-14, кол-во ком. студия"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "студия")
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 19, номер объекта: 1047, проектная (планируемая) площадь: 23,6 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), оси: 20, Л-М, секц. 2, Автостоянка, III этап, 1 ком."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "1")
        s = "местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), оси: 21-22, Л-М, 3 этап, 1 ком., секц. 2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "1")


    def test_floor(self):
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: подвальный, номер объекта: 16.0.10, проектная (планируемая) площадь: 3,45 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия &quot;Предпортовый&quot;, уч.180, (Ленинские искры), оси 5/1-6, Б/2-Б/5, секц. 16 (кладовая)"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], "подвальный")
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: подземный, номер объекта: 66, проектная (планируемая) площадь: 4696 кв.м, местоположение: Санкт-Петербург, Петроградский район, Петровский просп, д.20, лит.Н, оси 1-55/А-Н, 2/256 доли."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], "подземный")
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 2, номер объекта: 12, проектная (планируемая) площадь: 44,7 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок №2,этаж 2 , тип 1Г,в осях1/1-2/1/1/Е-Ж"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], "2")
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: -5,950, номер объекта: 527-528, проектная (планируемая) площадь: 12955,24 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия &quot;Предпортовый&quot;, уч.180, (Ленинские искры), 1/300 доли в праве собственности, строительные оси: 1а*-8а; А1а-М5а."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], "-5,950")
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: -1, номер объекта: 1.1,1.8,1.10,1.11,1.14,1.15,2.1,2.10,2.11,2.12, проектная (планируемая) площадь: 4983,19 кв.м, местоположение: Санкт-Петербург, Приморский район, Приморский проспект, д.52, лит.Тпроектный корпус 2.1,2.2,2.3,оси А-ДД,1-33"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], "-1")


    def test_transform_date_like_fields(self):
        s = "Объект долевого строительства: Нежилое помещение (кладовая), номер этажа: подвальный, номер объекта: 18.0.14, проектная (планируемая) площадь: 4,32 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия &quot;Предпортовый&quot;, уч.180, (Ленинские искры), секция 6-6/4, Б/3-Б/8"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="6-6/4"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 5, номер объекта: 0776, проектная (планируемая) площадь: 24,59 кв.м, местоположение: Санкт-Петербург, 25-я линия В.О., дом 8, лит.Б, 1 этап, секция 1-13 , строительные оси 26-27; 1П-1С."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1-13"')
        s = "Объект долевого строительства: Нежилое помещение (кладовая), номер этажа: подвальный, номер объекта: 7.5.24, проектная (планируемая) площадь: 3,94 кв.м, местоположение: Санкт-Петербург, тер.предприятия Предпортовый, участок 3.2 (Ленинские искры)секция 7, в осях 11.7с**-12.7с Е.7с-Г.7с"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.OBJECT_NUMBER], '="7.5.24"')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 2, номер объекта: 9.20, проектная (планируемая) площадь: 31,5 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок 1, тип - встроенное помещение, оси М-П/16-17."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.OBJECT_NUMBER], '="9.20"')


    def test_created_by_polina(self):
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 1, номер объекта: 4, проектная (планируемая) площадь: 65,84 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25)"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ADRESS], "г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25)")
        
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 6, номер объекта: 229, проектная (планируемая) площадь: 64,1 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Малый проспект В.О., д.52, лит.А корпус 1; секция 8, тип 2-10, строительные оси: Д1/Е2, 34.1/36"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="8"')
        
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 1, номер объекта: 363, проектная (планируемая) площадь: 66,55 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25) I этап, корпус 1 секция 3, строительные оси: 31/1-32/1 с прим. к оси 33/1, ЕЕ/1-ВВ/1 с прим. к оси АА/1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="3"')
        
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 3, номер объекта: 014, проектная (планируемая) площадь: 39,36 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), 1 этап строительства, (блок 1), секция 1, строительные оси: 4-5, Т/1-Ш"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="1"')
        
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 9, номер объекта: 51, проектная (планируемая) площадь: 50,1 кв.м, местоположение: Санкт-Петербург, Уральская улица, д.4, лит.А; корпус 3; тип:1-1.5-1; секция 1; строительные оси 9.1-10.1/А/3-Б/3"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3"')
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Квартира-студия, номер этажа: 4, номер объекта: 118, проектная (планируемая) площадь: 31,52 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок No1, тип Ст, в стр.осях Л-Н/4-5"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: студия, номер этажа: 5, номер объекта: 156, проектная (планируемая) площадь: 30,4 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, Блок No1,тип Ст, Оси М-П/7-8, Апартамент 1."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 2, оси: \"1-7, А-Д\", номер объекта: 2-н, проектная (планируемая) площадь: 101,4 кв.м, местоположение: город Санкт- Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корп. 6"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 9, номер объекта: 597, проектная (планируемая) площадь: 30,59 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), оси: Р/2-Н/2, 38/2-45/2, секция 4, корпус 2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        self.assertEqual(res[impo.SECTION], '="4"')
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 9, номер объекта: 728, проектная (планируемая) площадь: 38,41 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), 1 корп., секция 4, оси Ф/1-У/1, 37/1-43/1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="4"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 16, номер объекта: 659, проектная (планируемая) площадь: 40,92 кв.м, местоположение: Санкт-Петербург,    Василеостровский район, Невская губа, уч.25 (западнее Васильевского острова, квартал 22), корпус7, секция 4,в осях 48/1-50 Е-Л"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.SECTION], '="4"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 1, номер объекта: 4, проектная (планируемая) площадь: 67,94 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), 3орпус , 1 этап , секция 1.1 , в осях Ю/3-АА/3; 3/3-9/3"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3"')
        self.assertEqual(res[impo.SECTION], '="1.1"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 8, номер объекта: 066, проектная (планируемая) площадь: 37,9 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе)корпуc:13,cекция:1,строительные оси:12с-15с,Ас-Дс."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="13"')
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 2, номер объекта: 8- 21А, проектная (планируемая) площадь: 41,9 кв.м, местоположение: город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, кор. 8, под. 1, оси 6-8, А-Г"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="8"')
        self.assertEqual(res[impo.ENTRANCE], "1")
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 3, секция 1.1, оси: АА/3 с прим к оси: ББ/3-Ю/3, 12/3-14/3, номер объекта: 21, проектная (планируемая) площадь: 38,67 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25). к. 3"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3"')
        self.assertEqual(res[impo.SECTION], '="1.1"')
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 15, номер объекта: 803, проектная (планируемая) площадь: 32,33 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), коропус 1 , секция 4 , в осях Г/1-В/1, 37/1-43/1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="4"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 5, номер объекта: 100, проектная (планируемая) площадь: 49,95 кв.м, местоположение: Санкт-Петербург, Приморский район, Приморский проспект, д.52, лит.Т, корпсу 2.1, секция 2, в осях У.1-Э.1/2.1-5.1."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2.1"')
        self.assertEqual(res[impo.SECTION], '="2"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 1, номер объекта: 111, проектная (планируемая) площадь: 65,32 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), крпус 1, секция 2, оси 30/1-29/1;ЕЕ/1-ВВ/1."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="2"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 11, номер объекта: 539, проектная (планируемая) площадь: 24,58 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), копус 6, секция 3, в осях: 43-44, Н-С"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        self.assertEqual(res[impo.SECTION], '="3"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 4, номер объекта: 028, проектная (планируемая) площадь: 60,5 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе), корпу 12, секция 1, восях 12с- 21с, Ас-Ис. "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="12"')
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 5, номер объекта: 14- 52Б, проектная (планируемая) площадь: 69,3 кв.м, местоположение: город Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж (2 очередь ввода в эксплуатацию)корп 14,подъезд 1,оси 1-5,А-Г/Д"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="14"')
        self.assertEqual(res[impo.ENTRANCE], "1")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 22, номер объекта: 587, проектная (планируемая) площадь: 37,51 кв.м, местоположение: Санкт-Петербург, Красносельский район, Петергофское шоссе, уч.101, (севернее пересечения с улицей Пограничника Гарькавого, квартал 31-1), I этап, корпуса 2, оси 2/4-2/5; 2/Р-1-2/С. "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 12, номер объекта: 286, проектная (планируемая) площадь: 26 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.25 (западнее Васильевского острова, квартал 22), кор. 7, секция 2,в осях: 16-18, Н-С"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.SECTION], '="2"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 7, номер объекта: 382, проектная (планируемая) площадь: 25,7 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.25 (западнее Васильевского острова, квартал 22), коопус 7, секция 3, оси: 37-39; Н-С"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.SECTION], '="3"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 3, номер объекта: 747, проектная (планируемая) площадь: 47,23 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.25 (западнее Васильевского острова, квартал 22), копрус 7, секция 5, оси 71-72; Ж-С"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.SECTION], '="5"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 19, номер объекта: 1086, проектная (планируемая) площадь: 40,6 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.25 (западнее Васильевского острова, квартал 22), , коп. 7, секция 6, оси 80-83, К-Н"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.SECTION], '="6"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 9, номер объекта: 491, проектная (планируемая) площадь: 40,93 кв.м, местоположение: Санкт-Петербург, Красносельский район, Петергофское шоссе, уч.101, (севернее пересечения с улицей Пограничника Гарькавого, квартал 31-1), I этап, корпуса 2, в осях: 2/2-2/5;2/К-2/М"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "Объект долевого строительства: Трехкомнатная квартира, номер этажа: 25, номер объекта: 232, проектная (планируемая) площадь: 86,6 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе), корапус 12, этап 1, в осях 1с-5с Дс-Ус"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="12"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 7, номер объекта: 355, проектная (планируемая) площадь: 47,89 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), 1-этап, секция/Блок - 7/1, в осях 35-36, Т/1-Ш"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.SECTION], '="7"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 19, номер объекта: 186, проектная (планируемая) площадь: 63,2 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе), пус -15, подъезд/секция -1, в осях 15с-19с, Ис-Эс."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="15"')
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 17, номер объекта: 276, проектная (планируемая) площадь: 23,9 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А, корпус 1, секция 1."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Однокомнатная квартира, корпус 3, секция 1.1. номер этажа: 16, номер объекта: 156, проектная (планируемая) площадь: 29,13 кв.м, в осях: АА/3-ГГ/3;1/3-2/3, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25)"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1.1"')
        self.assertEqual(res[impo.FLOOR], "16")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 6, номер объекта: 41а, проектная (планируемая) площадь: 26,38 кв.м, местоположение: Санкт-Петербург, Будапештская улица, дом 102, литера А, в осях Гс1-Ес1, 2с1-5с1, секция 1(а) , 1 этап"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1а"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 8, номер объекта: 65а, проектная (планируемая) площадь: 27,55 кв.м, местоположение: Санкт-Петербург, Будапештская улица, дом 102, литера А, секция 1 (а), строительные оси: Нс1-Сс1; 4с1-7с1."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1а"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 3, номер объекта: 182, проектная (планируемая) площадь: 70,4 кв.м, местоположение: Санкт-Петербург, Московский район, Смоленская улица, д.14, лит.А, номер дома: секция 4; подъезд 4, оси 8-12, А-Б"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '=""')
        self.assertEqual(res[impo.SECTION], '="4"')
        self.assertEqual(res[impo.ENTRANCE], "4")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 7, номер объекта: 231, проектная (планируемая) площадь: 37,8 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе) корпус 25, II этап подъезд 2 (секция 1 в осях 3-4), строительные оси: 10с-12с, Бс-Ис"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="25"')
        self.assertEqual(res[impo.SECTION], '="1"')
        self.assertEqual(res[impo.ENTRANCE], "2")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 15, номер объекта: 271, проектная (планируемая) площадь: 38,4 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе) корпус 25, II этап подъезд 2 (секция 1 в рсях 3-4), строительные оси: 10с-12с, Бс-Ис"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="25"')
        self.assertEqual(res[impo.SECTION], '="1"')
        self.assertEqual(res[impo.ENTRANCE], "2")
        s = "Объект долевого строительства: Четырехкомнатная квартира, номер этажа: 8, номер объекта: 205, проектная (планируемая) площадь: 124,92 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Малый проспект В.О., д.52, лит.А, секция объекта 7, тип 4-6, в строительных осях М/П и 29/32"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="7"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 18, номер объекта: 157, проектная (планируемая) площадь: 46,98 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25),2 этап,корп. 6,секц. 1,в осях 1-3,И-П"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 9, номер объекта: 0676, проектная (планируемая) площадь: 33,74 кв.м, местоположение: Санкт-Петербург, 25-я линия В.О., дом 8, лит.Б, этап 1, с екция 1-11, строительные оси: 57-59; 1Д-1М."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1-11"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 11, номер объекта: 2445, проектная (планируемая) площадь: 37,96 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия \"Предпортовый\", уч.180, (Ленинские искры), снекция 19,в осях 16-20, Е-И."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="19"')

        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 1, номер объекта: 1-н, проектная (планируемая) площадь: 161,8 кв.м, местоположение: Санкт-Петербург, Московский район, Смоленская улица, д.14, лит.А, корпус (секция 1), подъезд 1, оси 2/1-5, ВВ/1-Я"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '=""')

        s = "г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, 2 блок, тип 1В, в осях Б-В/1-1/2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')

        s = "г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), 2- корпус, секция 4, в осях Т/2-Р/2, 38/2-45/2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')

        s = "г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), оси: 12/3-17/2, А-Г/1, блок 3.1подънзд 2 ( секция 1), 1 этап"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3.1"')
        self.assertEqual(res[impo.SECTION], '="1"')
        self.assertEqual(res[impo.ENTRANCE], "2")

        s = "Объект долевого строительства: Однокомнатная квартира, корпус 3/, секция 1.2, номер этажа: 17, номер объекта: 343, проектная (планируемая) площадь: 21,95 кв.м, в осях: Ю/3-АА/3;17/3-19/3, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25)"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3"')
        self.assertEqual(res[impo.SECTION], '="1.2"')

        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 17, номер объекта: 672, проектная (планируемая) площадь: 40,92 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.25 (западнее Васильевского острова, квартал 22),  корпус 7.секция 4,в осях 48/1-50, Е-Л."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.SECTION], '="4"')

        s = "г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, № блока 2, тип 1Б, в стр.осях Е-Ж/1-1/2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')

        s = "г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, № блока -2,тип 1Б , в осях 1-1/2/Ж-И"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')

        s = "г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, апартамент 2 ,кол-во комнат-3 ,№блока- 1, тип: -3Б,в осях П-М/1-3"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.ROOMS], "3")

        s = "г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, тип студия, №блока-1, в строительных осях: П-М/15-16"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')

        s = "Санкт-Петербург, Василеостровский район, Невская губа, уч.25, (западнее Васильевского острова, квартал 22), корпусс 9,  секция 1, оси: 9-11; Ж-М"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="9"')

        s = "г.Санкт-Петербург, Красносельский район, территория предприятия \"Предпортовый\", уч.180, (Ленинские искры), 10 секция , в осях 6-8, В-Е"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="10"')

        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 12, номер объекта: 119, проектная (планируемая) площадь: 41 кв.м, местоположение: Санкт-Петербург, Московский район, Смоленская улица, д.14, лит.А, оси: 2/1-4/2, У-Ф,  секция /подъезд 2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], "")

        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 6, номер объекта: 043, проектная (планируемая) площадь: 56,7 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе), корпус 25, II этап, секция 1секция 2 в осях 1-2), оси 11с-15с, Ас-Ис"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1 (2)"')

        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 12, номер объекта: 093, проектная (планируемая) площадь: 42,3 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе),2 этап, корпус  25, подъезд/секция 1секция 2 в осях 1-2), в осях 15с-17с,Ис-Юс; "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "")
        self.assertEqual(res[impo.SECTION], '="1 (2)"')

        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 4, номер объекта: 025, проектная (планируемая) площадь: 37 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе), корпус 25, II этап, секция 1сеция 2 в осях 1-2), оси: 4с-6с, Бс-Ис"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1 (2)"')
        s = "Объект долевого строительства: Трехкомнатная квартира, номер этажа: 13, номер объекта: 086, проектная (планируемая) площадь: 118,63 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), блок 3.1, секция 2секция 1), оси: 12/3-17/2,А-Г/1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3.1"')
        self.assertEqual(res[impo.SECTION], '="2 (1)"')
        s = "Объект долевого строительства: Трехкомнатная квартира, номер этажа: 13, номер объекта: 084, проектная (планируемая) площадь: 122,11 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), блок 3.1, секция 2секция1), оси: 9*-11/2,А-Г/1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3.1"')
        self.assertEqual(res[impo.SECTION], '="2 (1)"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 5, номер объекта: 49, проектная (планируемая) площадь: 24,98 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O, секция А , Б, подъезд 2, оси Гб-Еб/ 5б-7б"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="а, б"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 7, номер объекта: 28, проектная (планируемая) площадь: 26,95 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O. секция А,Б, подъезд 1, строительные оси: 5а-7а/ Еа-Га"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="а, б"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 5, номер объекта: 50, проектная (планируемая) площадь: 42,7 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O, секция А , Б, подъезд 2, оси: Бб-Гб/ 4б-7б"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="а, б"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 12, номер объекта: 381, проектная (планируемая) площадь: 63,87 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), 1 этап, Блок 1, Секция 7, оси: 31-33, Ф-Я"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: Нежилое помещение (кладовая), номер этажа: 1, номер объекта: 2.2.02, проектная (планируемая) площадь: 6,31 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), этап 1, юлок 2, секция К2, оси 7-7/1, Р-С"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 1, номер объекта: 229, проектная (планируемая) площадь: 24,65 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O, в осях Аг-Ид, 3д-5д,подъезд 1. "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "1")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 6, номер объекта: 2620, проектная (планируемая) площадь: 32,78 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия \"Предпортовый\", уч.180, (Ленинские искры), подъезд/секция 21 , оси 7-9; Г-Д/1; "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 7, номер объекта: 135, проектная (планируемая) площадь: 29,3 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O, подъезд 3. секция В, в осях Ав-Гв/4в-5в.; "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "3")
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 7, номер объекта: 27, проектная (планируемая) площадь: 35,03 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O, в осях 6а-7а/Иа-Еа, секция ГД, подъезд 5."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "5")
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 20, номер объекта: 155, проектная (планируемая) площадь: 57,7 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе), корпус 25, II этап , 1 подъезд, секция 2в осях 1-2), оси: 11с-15с, Бс-Ис."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ENTRANCE], "1")
        self.assertEqual(res[impo.SECTION], '="2"')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 20, номер объекта: 293, проектная (планируемая) площадь: 66,4 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе), корпус 25, II этап, подъезд 2, секция 1в осях 3-4), строительные оси 1с-3с, Бс-Эс; "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А, 1 этап, корпус 1,секц.1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.SECTION], '="1"')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 5, номер объекта: 40, проектная (планируемая) площадь: 32,7 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок 2, тип 1А, в осях 1-1/2/В-Г."
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "1")
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 9, номер объекта: 85, проектная (планируемая) площадь: 40,21 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д. блок 2. тип 1в, в осях Б-В/1-1/2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "1")
        s = "Объект долевого строительства: нежилое помещение, номер этажа: 4, номер объекта: 321, проектная (планируемая) площадь: 30,4 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д, блок 1 , тип- ст , в осях П-М /14-15"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "студия")
        # bugged and no need any more due logic change
        # s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 2, номер объекта: 2478, проектная (планируемая) площадь: 3278 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия \"Предпортовый\", уч.180, (Ленинские искры). Секция 20, в осях: 9-11; Г-Д/1"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.AREA], "32,78")
        s = "Объект долевого строительства: Трехкомнатная квартира, номер этажа: 18, номер объекта: 136, проектная (планируемая) площадь: 80,4 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе), корпус 25, 2 этап, секция 1 (секция 2 в осях 1-2), оси 1с-4с, Ас-Мс. "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="25"')
        self.assertEqual(res[impo.SECTION], '="1 (2)"')

        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: 5, номер объекта: 5-13(735), проектная (планируемая) площадь: 1902 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), 3 этап, строительные оси м/м: 12-13; К-И, примерная площадь м/м: 12 кв. м., 1/59 доли в праве собственности"
        tmp = impo.parseAddress(s)
        res = impo.get_object_type(tmp)
        self.assertEqual(res[impo.OBJECT_TYPE], 'машиноместо')


        # s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 12, номер объекта: 093, проектная (планируемая) площадь: 42,3 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе),2 этап,корп. 25, подъезд/секция 1(секция 2 в осях 1-2), в осях 15с-17с,Ис-Юс"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.ENTRANCE], "1")
        # self.assertEqual(res[impo.SECTION], '="2"')

        # s = "г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе),кад.№ 78:13:0007420:6052,Земельный участок, категория земель: Земли населенных пунктов, для размещения многоквартирного жилого дома (жилых домов), общая площадь 19 056 кв. м"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.ADRESS], "г. Санкт-Петербург, Петроградский район, проспект Медиков, д.10, лит.Ж, корпус 14.")

        # s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 1, номер объекта: 67, проектная (планируемая) площадь: 34,69 кв.м, местоположение: Санкт-Петербург, Красносельский район, Петергофское шоссе, д.86, корп.3, лит.А, в корпусе 2, в осях 11с-14с/Гс-Вс"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.CORPUS], '="2")

        # s = "г.Санкт-Петербург, территория предприятия \"Предпортовый\", уч.180, (Ленинские искры), кад.No 78:40:0008501:3268, Земельный участок, категория земель: земли населенных пунктов, разрешенное использование: для размещения многоквартирного жилого дома (жилых домов), общая площадь 45 340 кв. м"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.ADRESS], "г.Санкт-Петербург, территория предприятия \"Предпортовый\", уч.180, (Ленинские искры),кад.No 78:40:0008501:3268")

        # s = "г.Санкт-Петербург, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района),кад.No 78:34:0004163:23,Земельный участок, категория земель: Земли населенных пунктов. Разрешенное использование: для размещения жилого дома (жилых домов), общая площадь 30 488 кв. м"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.ADRESS], " г.Санкт-Петербург, улица Савушкина, уч.151, (квартал 66А Северо- Приморской части Приморского административного района),кад.No 78:34:0004163:23")


        # s = "Объект долевого строительства: Нежилое помещение, номер этажа: 13, номер объекта: 254, проектная (планируемая) площадь: 21,1 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), Автостоянка, III этап, 1 секция, оси: 8/1; И"
        # res = impo.parseAddress(s)
        # self.assertEqual(res[impo.CORPUS], '="7"')
        # self.assertEqual(res[impo.SECTION], '="4"')

    
    def test_corpus_anton_october_2017(self):

        
        s = 'Объект долевого строительства - жилое помещение - квартира № 129, общей площадью с учетом неотапливаемых помещений (балкона/лоджии) 35,32 кв.м., расположенный на 4 этаже Реконструированного объекта незавершенного строительства (корпус тип 01) с пристройкой 12-го блока на многоэтажную жилую застройку. строительный адрес: Республика Крым, г Ялта, пгт Гурзуф, ул Ялтинская,14-Б,участок №13. Адрес(местоположение) земельного участка: Республика Крым, г Ялта, пгт Гурзуф, ул Ялтинская, 14-Б. Кадастровый номер: 90:25:030103:358. Категория земель: Земли населенных пунктов -природно познавательный туризм. Площадь: 10700.00 кв.м. ;'
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '=""')
        s = "Объект долевого строительства: однокомнатная квартира, корпус ББ/3-ГГ/3;2/3-3/3 с прим. к оси 4/3, номер этажа: 14, номер объекта: 137, проектная (планируемая) площадь: 25 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25);"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="бб/3-гг/3"')  # ББ/3-ГГ/3;2/3-3/3
        self.assertEqual(res[impo.FLOOR], '14')
        s = "Объект долевого строительства - расположенный в Реконструированном объекте незавершенного строительства (корпус тип 01) с пристройкой 12-го блока на многоэтажную жилую застройку,квартира №127, общей площадью 49,07 кв.м., расположенный на 4 этаже 10 этажного рекреационного комплекса. строительный адрес: Республика Крым, г Ялта, пгт Гурзуф, ул Ялтинская, 14-Б, участок №13. Адрес(местоположение) земельного участка: Республика Крым, г Ялта, пгт Гурзуф, ул Ялтинская, 14-Б. Кадастровый номер: 90:25:030103:358. Категория земель: Земли населенных пунктов -природно познавательный туризм. Площадь: 10700.00 кв.м. ;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '=""')
        self.assertEqual(res[impo.FLOOR], '4')
        s = 'Объект долевого строительства: Нежилое помещение (Кладовая), номер этажа: 1, номер объекта: 2.4.11, проектная (планируемая) площадь: 5,85 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района),I этап строительства; блоки 2, секция 4, оси 17-18; П-Р;'
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        self.assertEqual(res[impo.FLOOR], '1')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 13, номер объекта: 141, проектная (планируемая) площадь: 81,88 кв.м, местоположение: г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), I этап строительства; блоки 2, секция 3, оси 11/1-12, Н/1-С/1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        self.assertEqual(res[impo.FLOOR], '13')
        s = "Объект долевого строительства: Квартира, номер этажа: 2 этаж в 5 секции, корпус.1, номер объекта: 54, проектная (планируемая) площадь: 52,2 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"') # .1
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Санкт-Петербург, Приморский район, Приморский проспект, д.52, лит.Т, корпус К-2.3, секция лп2.3-1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="к-2.3"')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 12, номер объекта: 169, проектная (планируемая) площадь: 23,75 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А, корпус й1, секция 1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.FLOOR], '12')
        s = 'Санкт-Петербург, Адмиралтейский район, улица Красуцкого, уч.15, (участок ж/д "Варшавский вокзал - Малая Митрофаньевская улица"), тип квартиры 2-13.2-2.4, оси A.2-B.2/13.2-16.2. корпус 4.5-2, секция 4'
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4.5-2"')
        s = "Санкт-Петербург, Малая Митрофаньевская улица, уч.30,Корп. 2, секция  3,тип 1-6.1-2.3, в осях Э2-ББ2/192-242"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 6, номер объекта: 65, проектная (планируемая) площадь: 41,96 кв.м, местоположение: Санкт-Петербург, Малая Митрофаньевская улица, уч.30, коорпус 1,  секция 2, тип 1-3.2-1.2, оси Д1-И1/221-301;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 6, номер объекта: 143, проектная (планируемая) площадь: 36,41 кв.м, местоположение: Санкт-Петербург, Малая Митрофаньевская улица, уч.30, тип 1-7.1-2.3 корпус 2, секция 3, оси Т2-Э2/192-242;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        self.assertEqual(res[impo.FLOOR], '6')
        s = "Санкт-Петербург, Малая Митрофаньевская улица, уч.30 корпус 1, секция 5, оси: ЛЛ1-ПП1/121-161"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Санкт-Петербург, Малая Митрофаньевская улица, уч.30,5 корпус 2, секция 3,тип 2-1.2-2.3, в осях Р2-Ф2/262-302"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), I этап строительства; блоки 2, секция 3, оси 11/1-12, Н/1-С/1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        self.assertEqual(res[impo.FLOOR], '')
        s = "Объект долевого строительства: 2-комнатная квартира, номер этажа: 1 секции 1 жилого дома №7, номер объекта: 2, проектная (планируемая) площадь: 66,7 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        self.assertEqual(res[impo.FLOOR], '1')
        s = "Объект долевого строительства: 1-комнатная квартира (жилой дом №4), номер этажа: 3 секция 2, номер объекта: 24, проектная (планируемая) площадь: 41,34 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4"')
        self.assertEqual(res[impo.FLOOR], '3')
        s = "Объект долевого строительства: 1 - комнатная квартира, номер этажа: 1 секции 1 жилого дома №27, номер объекта: 4, проектная (планируемая) площадь: 43,27 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="27"')
        s = "г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), к.2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), к. 2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 4, номер объекта: 150, проектная (планируемая) площадь: 26,5 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), корупс 1, секция 2, строительные оси: 29/1-30/1, ЕЕ/1-ББ/1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: однокомнатная квартира, номер этажа: 10, номер объекта: 737, проектная (планируемая) площадь: 29,02 кв.м, местоположение: г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), корус 1, секция 4, оси: Р/1-М/1, 34/1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Объект долевого строительства: Квартира, номер этажа: 2 этаж в 5 секции, к корпус .1, номер объекта: 54, проектная (планируемая) площадь: 52,2 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 11, номер объекта: 201, проектная (планируемая) площадь: 80,1 кв.м, местоположение: Санкт-Петербург, Московский район, Московский проспект, уч.606к корпус  6,секция 6.3,оси 6с-13с,Ас-Гс.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        self.assertEqual(res[impo.FLOOR], '11')
        s = "Санкт-Петербург, Приморский район, проспект, д.52, лит.Т, корпус.1, секция лп2.1-2"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        s = "Санкт-Петербург, Адмиралтейский район, улица Красуцкого, уч.15, (участок ж/д Варшавский вокзал - Малая Митрофаньевская улица), тип 2-4.1-1.1, корпус 4.5.-1, секция 1,  в осях А.1-Б.1/3.1-6.1"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4.5.-1"')
        s = "г.Санкт-Петербург, Приморский район, улица Савушкина, уч.151, (квартал 66А Северо-Приморской части Приморского административного района), блок 1, секция 1, корпус 7,  в осях 33/1-35; Т/1-Ш"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="7"')
        s = "Санкт-Петербург, Малая Митрофаньевская улица, уч.30 корпус  2, секция  1,тип 1-1.1-2.1, в осях А2-Г2,92-142"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 9, номер объекта: 57, проектная (планируемая) площадь: 30,85 кв.м, местоположение: Санкт-Петербург, Адмиралтейский район, улица Красуцкого, уч.15, (участок ж/д Варшавский вокзал - Малая Митрофаньевская улица)корпус 4.5-2, тип 1с-2.1-2.3, секция 3,  в осях Г.2-Е.2/2.2.-4.2;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4.5-2"')
        
        s = " Объект долевого строительства: Нежилое помещение, номер этажа: 8, номер объекта: 392-393-394-395, проектная (планируемая) площадь: 147,23 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д,,корпус №3, №Блока 1, тип 3Д,, строительные оси: Л-П/10-11;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="3"')
        
        s = " Объект долевого строительства: Нежилое помещение, номер этажа: 5, номер объекта: 42, проектная (планируемая) площадь: 36,6 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д,блое №2,тип 1Б, в осях 1-1/2/Е-Ж;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 1, номер объекта: 2, проектная (планируемая) площадь: 45,59 кв.м, местоположение: Санкт-Петербург, Приморский район, Приморский проспект, д.52, лит.Т, корпус к-2.1, лп2.1-1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="к-2.1"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 8, номер объекта: 44, проектная (планируемая) площадь: 47,09 кв.м, местоположение: Санкт-Петербург, Приморский район, Приморский проспект, д.52, лит.Т,корпус 2.1, секция 1,  в осях М.1-К.1/3.1-6.1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2.1"')

        s = " Объект долевого строительства: Нежилое помещение, номер этажа: 6, номер объекта: 7.6.173, проектная (планируемая) площадь: 100,09 кв.м, местоположение: Санкт-Петербург, Петроградский район, Петровский проспект, уч.2, (юго-западнее пересечения с р. Ждановкой),  корпус  2В  в осях 5-6, строительные оси 1-3 / А-В, апартаменты;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2в"')
        
        s = " Объект долевого строительства: Нежилое помещение, номер этажа: 6, номер объекта: 1-1265, проектная (планируемая) площадь: 35,39 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А, 2-этап строительства,корпус 1, секция 4,  в осях 4/4-7/4;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')

        s = " Объект долевого строительства: Нежилое помещение, номер этажа: 18, номер объекта: 281, проектная (планируемая) площадь: 31,48 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А,1 ЭТАП,КОРП. 1,СЕКЦ. 1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="1"')
        
        s = " Объект долевого строительства: Двухкомнатная квартира, номер этажа: 13, номер объекта: 188, проектная (планируемая) площадь: 67,83 кв.м, местоположение: Санкт-Петербург, Адмиралтейский район, улица Красуцкого, уч.15, (участок ж/д Варшавский вокзал - Малая Митрофаньевская улиц)корпус4.5-1, тип 2е-15.1-1.2,  в осях В.1-Г.1/14.1-18.1;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4.5-1"')
        
        s = " Объект долевого строительства: Нежилое помещение, номер этажа: 1, номер объекта: 10, проектная (планируемая) площадь: 110,27 кв.м, местоположение: Санкт-Петербург, Малая Митрофаньевская улица, уч.23, (участок ж/д )1 этап,корпус 4,секция 3, тип В-10-4.3, в осях 264-334,ПП4-ЭЭ4;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 3, номер объекта: 7, проектная (планируемая) площадь: 38,49 кв.м, местоположение: Санкт-Петербург, Малая Митрофаньевская улица, уч.30 корпус  2, секция  1,тип 1-1.1-2.1, в осях А2-Г2,92-142;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="2"')
        
        s = " Объект долевого строительства: Двухкомнатная квартира, номер этажа: 11, номер объекта: 201, проектная (планируемая) площадь: 80,1 кв.м, местоположение: Санкт-Петербург, Московский район, Московский проспект, уч.606корпус 6,секция 6.3,оси 6с-13с,Ас-Гс.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        
        s = " Объект долевого строительства: Двухкомнатная квартира, номер этажа: 10, номер объекта: 43, проектная (планируемая) площадь: 59,38 кв.м, местоположение: Санкт-Петербург, Уральская улица, уч.46, (на месте д.2, Лит.А)корпус 4,секция 1, тип 2-2-4.1, в осях 5-8/А-В;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="4"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 8, номер объекта: 070, проектная (планируемая) площадь: 41,6 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе)корпус -15, подъезд , секция - 1,  в осях 1с-2с, Ас-Рс.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="15"')
        
        s = " Объект долевого строительства: Трехкомнатная квартира, номер этажа: 21, номер объекта: 192, проектная (планируемая) площадь: 86,6 кв.м, местоположение: г.Санкт-Петербург, Южное шоссе, уч.13, (юго-западнее дома 55, литера Д по Южному шоссе)корпус 13, секция 1,  в осях 1с-5с Дс-Ус;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="13"')
        
        s = " Объект долевого строительства: Трехкомнатная квартира, номер этажа: 11, номер объекта: 080, проектная (планируемая) площадь: 82,1 кв.м, местоположение: Санкт-Петербург, Фрунзенский район, Южное шоссе, уч.6, (восточнее дома 49, литера Ф по Южному шоссе),II этап,корпус 25 ,подъезд 1,секция 2  в осях 1-2, строительные оси 1с-4с,Ас-Мс.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="25"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 11, номер объекта: 542, проектная (планируемая) площадь: 31,58 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25)корпус 6, секция 3,  в осях 50-52 С-Н;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 3, номер объекта: 413, проектная (планируемая) площадь: 30,18 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25),  в осях 46-49, Н-С, секция 3 ,корпус 6;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        
        s = " Объект долевого строительства: Однокомнатная квартира, номер этажа: 5, номер объекта: 43, проектная (планируемая) площадь: 49,98 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25),2 этап,корпус6,секция 1, в осях 9-12,Л-С;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.CORPUS], '="6"')
        

    def test_podval_anton_october_2017(self):
        # подвал и цокольный этаж
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: подвал  корпус №1, секция №3, номер объекта: 8, проектная (планируемая) площадь: 56,1 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], 'подвал')
        s = "Объект долевого строительства: Помещение, номер этажа:  секция 2, цокольный этаж, номер объекта: 4, проектная (планируемая) площадь: 82,9 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], 'цокольный')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: подвал  корпус № 1 секция 3, номер объекта: 7, проектная (планируемая) площадь: 64 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], 'подвал')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: корпус 2, секция 2, подвал, номер объекта: 3, проектная (планируемая) площадь: 57,4 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], 'подвал')
        # \d этаж или \d этаже
        s = "Объект долевого строительства: 1- комнатная квартира, номер этажа: Дом № 28, секция 2, 1 этаж, номер объекта: 45,39, проектная (планируемая) площадь: 45,39 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '1')
        s = "Объект долевого строительства: 2 - комнатная квартира, номер этажа:  секция 1, 3 этаж в д. № 28, номер объекта: 11, проектная (планируемая) площадь: 69,88 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '3')
        s = "Объект долевого строительства: Квартира, номер этажа: секция 1, 4 этаж, номер объекта: 14, проектная (планируемая) площадь: 51,8 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '4')
        s = "Объект долевого строительства: Квартира, номер этажа:  секция 1, 3 этаж, номер объекта: 15, проектная (планируемая) площадь: 74 кв.м, местоположение: Московская область, Сергиево-Посадсский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '3')
        s = "Объект долевого строительства: Квартира, номер этажа: секция 4 на 2 этаже, номер объекта: 62, проектная (планируемая) площадь: 45,8 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: 1- комнатная квартира, номер этажа: 2 этаж в 3 секции, номер объекта: 19, проектная (планируемая) площадь: 40,3 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: Квартира, номер этажа: во 2-ой секции на 2-ом этаже, номер объекта: 28, проектная (планируемая) площадь: 45,39 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: Квартира, номер этажа: секция 1 на 3 этаже, номер объекта: 12, проектная (планируемая) площадь: 43,29 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '3')
        s = "Объект долевого строительства: Квартира, номер этажа: 2 этаж, корпус 1 секция 3, номер объекта: 33, проектная (планируемая) площадь: 52,2 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: Квартира, номер этажа: 5 секция на 2 этаже, номер объекта: 148, проектная (планируемая) площадь: 34 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район. городское поселение Сергиев Посад, г.Сергиев Посад, ул.Фестивальная, д.23, стр.2;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: 2 - комнатная квартира, номер этажа: 1 секция, 2 этаж, номер объекта: 5, проектная (планируемая) площадь: 66,17 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: 1- комнатная квартира, номер этажа: 1 секция, 3 этаж, номер объекта: 9, проектная (планируемая) площадь: 43,29 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '3')
        # номер этажа: \d
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: корпус 1, секция 4, номер объекта: 21, проектная (планируемая) площадь: 39,3 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '')
        s = "Объект долевого строительства: 1-комнатная квартира (жилой  корпус 4), номер этажа: 1 секция 1, номер объекта: 4, проектная (планируемая) площадь: 41,58 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '1')
        s = "Объект долевого строительства: 1- комнатная квартира, номер этажа: 1 секция 1 дом 10, номер объекта: 2, проектная (планируемая) площадь: 77,21 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '1')
        s = "Объект долевого строительства: 2-комнатная квартира в жилом доме 3, номер этажа: 1 в 1 секции, номер объекта: 2, проектная (планируемая) площадь: 63,38 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '1')
        s = "Объект долевого строительства: 2 - комнатная квартира, номер этажа: 3 жилого  корпус 8, номер объекта: 42, проектная (планируемая) площадь: 68,63 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, в районе поселка Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '3')
        s = "Объект долевого строительства: 3 - комнатная квартира, номер этажа: 2 секция 1, номер объекта: 1, проектная (планируемая) площадь: 71,4 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: 2 - комнатная квартира, номер этажа: 2 секция 1 корпус 1, номер объекта: 3, проектная (планируемая) площадь: 52 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '2')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 16 (секция 1-2 Б-В), номер объекта: 221, проектная (планируемая) площадь: 52,09 кв.м, местоположение: Московская область, г.Красноармейск, ул.Новая Жизнь, д.8;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '16')
        s = "Объект долевого строительства: Трехкомнатная квартира, номер этажа: 11 строительные оси В-А/Б/9-7/8, номер объекта: 144, проектная (планируемая) площадь: 52,09 кв.м, местоположение: Московская область, г.Красноармейск, ул.Новая Жизнь, д.8;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '11')
        s = "Объект долевого строительства: 1-комнатная квартира, номер этажа: 5 (строит. оси Д-В/6-7), номер объекта: 57, проектная (планируемая) площадь: 32,95 кв.м, местоположение: Московская область, г.Красноармейск, ул.Новая Жизнь, д.8;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '5')
        s = "Объект долевого строительства: 1 - комнатная квартира, номер этажа: 15 (секция 3), номер объекта: 273, проектная (планируемая) площадь: 34,2 кв.м, местоположение: Московская область, Пушкинский район, в районе микрорайона Новая Деревня, г.Пушкино, д 12;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '15')
        s = "Объект долевого строительства: 2 - комнатная квартира, номер этажа: 5. секция 1, номер объекта: 20, проектная (планируемая) площадь: 52,8 кв.м, местоположение: Московская область, Пушкинский район, в районе микрорайона Новая Деревня г.Пушкино,  корпус  14;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '5')
        # meters
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: отм -5,950, номер объекта: " \
            "399-400, проектная (планируемая) площадь: 12955,24 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия , уч.180, (Ленинские искры) Подземная автостоянка, строительные оси: 1а*-8а, А1а-М5а, 1/300 доля в праве общей долевой собственности;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '-5,950')
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: на уровн. -5950, " \
            "номер объекта: 3-4, проектная (планируемая) площадь: 12955,24 кв.м, местоположение: г.Санкт-Петербург, Красносельский район, территория предприятия , уч.180, (Ленинские искры), 1/300 доли,  в осях 1а*-8а; А1а-М5а.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '-5950')
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: уровень на отм. -5,500, номер объекта: 167-168, проектная (планируемая) площадь: 3680,56 кв.м,"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '-5,500')
        self.assertEqual(res[impo.AREA], '3680,56')
        s= "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: на отм.-5,950, номер объекта: 171-172, проектная (планируемая) площадь: 12955,24 кв.м, местоположение: г.Санкт-Петербург, "
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.FLOOR], '-5,950')
        self.assertEqual(res[impo.AREA], '12955,24')
        
        
    def test_area_floor_anton_october_2017(self):
        s = "Объект долевого строительства: 1-комнатная квартира, номер этажа: 6, номер объекта: 71, проектная (планируемая) площадь: 31,75 кв.м, проектная площадь балконов и террас, ( нониженным коэффициентом 0,3) кв.м. 1,20 кв.м., наличие балкона/лоджии - балкон; местоположение: Московская область, г.Красноармейск, ул.Новая Жизнь, д.8;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '31,75')
        self.assertEqual(res[impo.FLOOR], '6')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 4, номер объекта: 53, проектная (планируемая) площадь: 51,16 кв.м., проектная площадь балконов и террас ( с понижающим коэффициентом 0,3) кв.м., наличие балкона/лоджии - балкон;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '51,16')
        self.assertEqual(res[impo.FLOOR], '4')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 10, номер объекта: 65, проектная (планируемая) площадь: 69,40кв.м, местоположение: Санкт-Петербург, Московский район, Московский проспект, уч.606, 3 этап, секция 5.1, оси: 10с-13с, Мс-Сс.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '69,40')
        self.assertEqual(res[impo.FLOOR], '10')
        self.assertEqual(res[impo.TYPE], 'двухкомнатная квартира')
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: -5,500, номер объекта: 66-67, проектная (планируемая) площадь: 3680,56 кв.м, местоположение: Санкт-Петербург, тер.предприятия Предпортовый, участок 3.2 (Ленинские искры), корпус 1, 1/117 доли в праве, оси 1-13;Е.3с-Л.5с.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '3680,56')
        self.assertEqual(res[impo.FLOOR], '-5,500')
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: на отметке -5.350, номер объекта: 77-78, проектная (планируемая) площадь: 5533,95 кв.м, местоположение: Санкт-Петербург, поселок Стрельна, просп.Будённого, уч.5, (территория, ограниченная проспектом Буденного, границами территориальных зон ТД1-2_2, ТР2, ТР4, Т3Ж2, проектируемой улицей, проектируемым проез корпус 5, проектируемым проез корпус 6, проектируемой магистралью, проектируемым продолжением пр. Ветеранов, в Красносельском районе; ФЗУ №79), оси 1а-12а;А1а-П2а, 1/171 доли в праве;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '5533,95')
        self.assertEqual(res[impo.FLOOR], '-5.350')
        s = "Объект долевого строительства: Нежилое помещение (Автостоянка), номер этажа: на отм.-5,350, номер объекта: 7-8, проектная (планируемая) площадь: 5533,95 кв.м, местоположение: Санкт-Петербург, поселок Стрельна, просп.Будённого, уч.5, (территория, ограниченная проспектом Буденного, границами территориальных зон ТД1-2_2, ТР2, ТР4, Т3Ж2, проектируемой улицей, проектируемым проез корпус 5, проектируемым проез корпус 6, проектируемой магистралью, проектируемым продолжением пр. Ветеранов, в Красносельском районе; ФЗУ №79),1/171 доли, в осях 1а-12а,А1а-П2а;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '5533,95')
        self.assertEqual(res[impo.FLOOR], '-5,350')
        # multiple areas
        s = "Объект долевого строительства: Нежилое помещение (автостоянка), номер этажа: 5, номер объекта: 5-19(836), проектная (планируемая) площадь: 2.017,00 кв.м, местоположение: Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25),3 этап, строительные оси м/м: 21-22; Г-В, примерная площадь  12 кв. м., 1/69 доли в праве собственности.;"
        res = impo.parseAddress(s)
        #self.assertEqual(res[impo.AREA], '2.017,00')
        self.assertEqual(res[impo.AREA], '12')
        self.assertEqual(res[impo.FLOOR], '5')
        s = "проектная (планируемая)7 площадь: 24,39 кв.м"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '24,39')
        s = "проектная (планируемая) площадь: ,8 кв.м"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '0,8')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 2, номер объекта: 0355, проектная (планируемая) площадь: 2435 кв.м"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '24,35')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 2, номер объекта: 2478, проектная (планируемая) площадь: 3278 кв.м,"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '32,78')
        s = "Объект долевого строительства: Однокомнатная квартира, номер этажа: 11, номер объекта: 1629, проектная (планируемая) площадь: 1629 кв.м"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.OBJECT_NUMBER], '="1629"')
        self.assertEqual(res[impo.AREA], '')
        s = "Объект долевого строительства: Двухкомнатная квартира, номер этажа: 3, номер объекта: 235, проектная (планируемая) площадь: 235 кв.м, местоположение: Санкт-Петербург, Московский район, Киевская улица, д.5, лит.O, секция ГД, секция 5, в осях Кд-Жд 1д-5д;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '')
        s = "Объект долевого строительства: 1- комнатная квартира, номер этажа: 1, секция 8, номер объекта: 655, № на площадке 5, проектная (планируемая) площадь: 655 кв.м, местоположение: Московская область, Пушкинский район, в районе микрорайона Новая Деревня, г.Пушкино, д 12;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.AREA], '')
        
    
    def test_rooms_type_anton_october_2017(self):
        s = "Объект долевого строительства: Квартира  корпус №1, секции №5, 2-я слева от лифта, номер этажа: 4, номер объекта: 62, проектная (планируемая) площадь: 52,2 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], "")
        self.assertEqual(res[impo.TYPE], 'квартира')
        s = "Объект долевого строительства: 3 - комнатная квартира (жилой дом 29) секция 2, номер этажа: 3, номер объекта: 24, проектная (планируемая) площадь: 94,65 кв.м, местоположение: Московская область, г.Сергиев Посад, пос.Гражданский;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], '3')
        s = "Объект долевого строительства: Квартира (секция-5), номер этажа: 3, номер объекта: 206, проектная (планируемая) площадь: 34,19 кв.м, местоположение: Московская область, Пушкинский район, в районе микрорайона Новая Деревня г.Пушкино, д.10;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], '')
        self.assertEqual(res[impo.TYPE], 'квартира')
        s = "Объект долевого строительства: Квартира  корпус №1, секции №5, 2-я слева от лифта, номер этажа: 4, номер объекта: 62, проектная (планируемая) площадь: 52,2 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.ROOMS], '')
        self.assertEqual(res[impo.TYPE], 'квартира')
        s = "Объект долевого строительства: Нежилое помещение  корпус №1 секции №4, номер этажа: 1, номер объекта: 6, проектная (планируемая) площадь: 66,1 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], 'нежилое помещение')
        s = "Объект долевого строительства: Квартира в секции №2, корпус №2, 3-я слева из лифта, номер этажа: 4, номер объекта: 13, проектная (планируемая) площадь: 51,9 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], 'квартира')
        s = "Объект долевого строительства: 2 - комнатная квартира (в 5 корпусе), номер этажа: 4 этаж в 4 секции, номер объекта: 68, проектная (планируемая) площадь: 51,9 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], '2 - комнатная квартира')
        s = "Объект долевого строительства: Нежилое помещение на цокольном этаже, корпус 1, секция 3, номер объекта: 6, проектная (планируемая) площадь: 40,8 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], 'нежилое помещение')
        self.assertEqual(res[impo.FLOOR], 'цокольном')
        s = "Объект долевого строительства: Нежилое помещение  корпус №1 секции №4, номер этажа: 1, номер объекта: 6, проектная (планируемая) площадь: 66,1 кв.м, местоположение: Московская область, Сергиево-Посадский муниципальный район, городское поселение Сергиев Посад, г.Сергиев Посад, ул.Сергиевская, д.13;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], 'нежилое помещение')
        s = "Объект долевого строительства- парковочное место № 19, общей площадью 16 кв.м., расположенный на 0 этаже 10 этажного рекреационного комплекса. строительный адрес: Республика Крым, г Ялта, пгт Гурзуф, ул Ялтинская,14-Б,участок №13. Адрес(местоположение) земельного участка: Республика Крым, г Ялта, пгт Гурзуф, ул Ялтинская, 14-Б. Кадастровый номер: 90:25:030103:358. Категория земель: Земли населенных пунктов -природно познавательный туризм. Площадь: 10700.00 кв.м.;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], '- парковочное место')
        s = "Объект долевого строительства: Нежилое помещение, номер этажа: 2, номер объекта: 9.18н, проектная (планируемая) площадь: 32,56 кв.м, местоположение: г.Санкт-Петербург, проспект КИМа, д.19, лит.Д,тип- встроенное помещение, в осях П-М/14-15;"
        res = impo.parseAddress(s)
        self.assertEqual(res[impo.TYPE], "нежилое помещение")


    def test_ddu_number_and_date_anton_october_2017(self):
        s = "Договор участия в долевом строительстве №Д-ОС-02/15-3/1-156,157,158,159,160,161,162,163 oт 25.02.2015"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№Д-ОС-02/15-3/1-156,157,158,159,160,161,162,163')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '25.02.2015')
        s = 'Договор участия в долевом строительстве №Д-ОС-01/15-3/2-14 oт 30.01.2015'
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№Д-ОС-01/15-3/2-14')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '30.01.2015')
        s = 'Договор  участия в долевом строительстве oт 31.07.2016 № 2.1/2/26/К'
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№2.1/2/26/К')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '31.07.2016')
        s = 'Договор № Н-1/6 участия в долевом строительстве oт 28.03.2014'
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№Н-1/6')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '28.03.2014')
        s = 'Договор № Д-ОС-11/16-3/1-333 участия в долевом строительстве oт 30.11.2016'
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№Д-ОС-11/16-3/1-333')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '30.11.2016')
        s = 'Договор участия в долевом строительстве №117-ГЛ-8.2-3 oт 28.03.2017'
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№117-ГЛ-8.2-3')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '28.03.2017')
        s = "Договор участия в долевом строительстве №Д-ОС-02/15-3/1-156,157,158,159,160,161,162,163 oт 25.02.2015"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№Д-ОС-02/15-3/1-156,157,158,159,160,161,162,163")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "25.02.2015")
        s = "Договор участия в долевом строительстве №Д-ОС-01/15-3/2-14 oт 30.01.2015"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№Д-ОС-01/15-3/2-14")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "30.01.2015")
        s = "Договор участия в долевом строительстве №Д-ОС-11/15-3/1-350 oт 09.11.2015"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№Д-ОС-11/15-3/1-350")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "09.11.2015")
        s = "Договор № Д-ОС-11/16-3/1-333 участия в долевом строительстве oт 30.11.2016"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№Д-ОС-11/16-3/1-333")
        s = "Соглашение об уступке прав oт 20.04.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "20.04.2017")
        s = "Договор  участия в долевом строительстве oт 31.07.2016 № 2.1/2/26/К"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№2.1/2/26/К")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "31.07.2016")
        s = "Договор  участия  в долевом строительстве oт 28.04.2017 № 177б-БАЛ/04-17АН"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№177б-БАЛ/04-17АН")
        s = "Договор   участия в долевом строительстве oт 21.02.2017 № 2231/И-17/1"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№2231/И-17/1")
        s = "Договор № Н-1/6 участия в долевом строительстве oт 28.03.2014"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№Н-1/6")
        s = "Договор участия в долевом строительстве №117-ГЛ-8.2-3 oт 28.03.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№117-ГЛ-8.2-3")
        s = "Договор № 114И-ГЛ-8.5-1 участия в долевом строительстве oт 10.08.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№114И-ГЛ-8.5-1")

        s = "Договор участия в долевом строительстве № ДДУ0058-ЛГ1-М-06/17 oт 26.06.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№ДДУ0058-ЛГ1-М-06/17")
        s = "Договоручастия в долевом строительстве oт 30.06.2017 №  ДДУ0093И-ЛГ1-06/17"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№ДДУ0093И-ЛГ1-06/17")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "30.06.2017")
        s = "Договор № 98/А-ФЛ-ДУ участия в долевом строительстве oт 27.08.2014"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№98/А-ФЛ-ДУ")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "27.08.2014")
        s = "Договор № ДДУ/НП14-02-04-089/1 участия в долевом строительстве жилого дома oт 05.06.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№ДДУ/НП14-02-04-089/1")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "05.06.2017")
        s = "Договор № 107-СМ-3 участия в долевом строительстве oт 06.06.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№107-СМ-3")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "06.06.2017")
        s = "Договор  участия в долевом строительстве oт 29.04.2016 № 54658/0416-ЮШ11"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№54658/0416-ЮШ11")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "29.04.2016")
        s = "Договор № 14059/0517-ТВ1 участия в долевом строительстве oт 31.05.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№14059/0517-ТВ1")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "31.05.2017")
    
        # TYPO, уточнить у Полины дальнейшие действия
        # s = "Договор 2925 участия в долевом строительстве многоквартирного жилого дома oт 23.04.2016"
        # res = impo.extractDduDocDesc(s)
        # self.assertNotEqual(res[impo.DDU_DOC_DESC_NUMBER], None)
        # self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "")
        # self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "")
    
        s = "Дополнительное соглашение oт 09.02.2015 №1"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№1")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "09.02.2015")
    
        s = "Договор участия в долевом строительстве жилого комплекса Светлый мир Я-Романтик. oт 20.12.2016 № 20/12/2016-К-815-П5-19"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№20/12/2016-К-815-П5-19")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "20.12.2016")
        s = "Соглашение от уступке права требования oт 11.12.2016 №11/12/2016-ЯР-2-42-Н-У"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№11/12/2016-ЯР-2-42-Н-У")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "11.12.2016")
        s = "Договор  участия в долевом строительстве oт 03.10.2016 № 03/10/2016-ЯР-2-7-913"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№03/10/2016-ЯР-2-7-913")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "03.10.2016")
        s = "Договор  участия в долевом строительстве oт 02.06.2017"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "02.06.2017")
        s = "Договор от 31.07.2017 №19"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '31.07.2017')
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№19')
        s = "Договор участия в долевом строительстве жилого дома oт 30.08.2017 №Договор № ДДУ/НП14-03-06-218/1"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '30.08.2017')
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№ДДУ/НП14-03-06-218/1')
        # TYPOS:
        # TYPO: Space in ddu number
        s = "Договор участия №СД 5-3/1-4 в долевом строительстве жилого дома oт 30.01.2016"
        res = impo.extractDduDocDesc(s)
        # self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], '№СД 5-3/1-4')
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], '30.01.2016')
        # TYPO: no number
        s = "Договор участия в долевом строительстве П-29 oт 05.05.2017"
        res = impo.extractDduDocDesc(s)
        # self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "П-29")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "05.05.2017")
        # additional
        
        s = "Договор участия в долевом строительстве Комплекса апартаментов для проживания №12/16 от 30.03.2016 г."
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№12/16")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "30.03.2016")

        s = "Договор участия в долевом строительстве №2.3-4 от 13.09.2016 г."
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№2.3-4")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "13.09.2016")

        s = "Договор участия в долевом строительстве Комплекса апартаментов для проживания от 03.03.2016 г."
        res = impo.extractDduDocDesc(s)
        #self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "03.03.2016")

        s = "Договор участия в долевом строительстве oт 26.12.2016 №060008602, выдавший орган: ."
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№060008602")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "26.12.2016")
        
        s = "Договор участия в долевом строительстве №2.1-79 №2.1-79 от 01.09.2016 г."
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DDU_DOC_DESC_NUMBER], "№2.1-79")
        self.assertEqual(res[impo.DDU_DOC_DESC_DATE], "01.09.2016")
        

    def test_type_dogovor_anton_october_2017(self):
        s = "Договор уступки прав (цессии)  по договору участия в долевом ст"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "Уступка")
        s = "уступка"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "Уступка")
        s = "замена сторны"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "Замена стороны")
        s = "перемена стороны"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "Замена стороны")
        s = "расторжение договора"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "Расторжение")
        s = "дополнительное соглашение"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "Доп. соглашение")
        s = "Договор участия в долевом строительстве oт 23.12.2016 №23/12/2016-БХ-Б-268 АБЫРВАЛГ"
        res = impo.extractDduDocDesc(s)
        self.assertEqual(res[impo.DOGOVOR_TYPE], "ДДУ")
        
        
    def test_simplify_floor(self):
        
        s = "подвальный"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)
        
        s = "на отметке -5"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)
        
        s = "на уровне -5.5"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)
        
        s = "-5,95"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)
        
        s = "-5000"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)
        
        s = "-5,500"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)
        
        s = "18"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, 18)
        
        s = "-1"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, -1)

        s = ""
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, None)

        s = "0"
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, 0)
        
        s = None
        r = impo.get_floor_simplified(s)
        self.assertEqual(r, None)
        
        s = "5"
        r = impo.get_floor_simplified(s)
        #print(f" value is {r} and type is {type(r)}")
        self.assertTrue(r and 5 > 3)

        s = "подвальный"
        r = impo.get_floor_simplified(s)
        #print((r and r < 10))
        self.assertTrue(r and r < 0)
        
        s = "цокольный"
        r = impo.get_floor_simplified(s)
        # print(type(r))
        self.assertTrue(r and r < 0)
        
        s = "15"
        r = impo.get_floor_simplified(s)
        self.assertTrue(r and r > 10)

        s = "-5.500"
        r = impo.get_floor_simplified(s)
        self.assertTrue(r and r < 1)
        
        s = ""
        r = impo.get_floor_simplified(s)
        self.assertFalse(r and r < 1)
        
        s = "0"
        r = impo.get_floor_simplified(s)
        self.\
            assertFalse(r and r < 1)

    def test_municipalniy_kontrakt(self):
        s = 'Муниципальный контракт oт 09.11.2017 №156'
        r = impo.extractDduDocDesc(s)
        self.assertEqual(r[impo.DDU_DOC_DESC_DATE], '09.11.2017')
        self.assertEqual(r[impo.DDU_DOC_DESC_NUMBER], '№156')
        self.assertEqual(r[impo.DOGOVOR_TYPE], 'Муниципальный контракт')


    def test_december_2017_anton(self):
        s = 'Санкт-Петербург, Красносельский район, Петергофское шоссе, участок 11, (севернее пересечения с улицей Пограничника Гарькавого, квартал 39-6),автостоянка между корпусами 1,2, оси М-Л, 11-13'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.CORPUS], '=""')
    
        s = 'г.Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25), вкорпус 1 , секция 3 ,  в осях 47/1-49/1, ЕЕ/1-ВВ/1'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.CORPUS], '="1"')
    
        s = 'Санкт-Петербург, Московский район, Московский проспект, уч.606, 3 этап, корпус 6, СЕКЦИЯ 6.4, ОСИ 1с-7с,Бс-Жс, тип 3-2.3-6.4'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.SECTION], '="6.4"')
    
        s = 'Санкт-Петербург, Московский район, Московский проспект, уч.606,3 этап , тип 1-1.4-6.4, корпус 6, секци 6.4,  в осях 12с-16с, Ас-Вс'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.SECTION], '="6.4"')
    
        s = 'Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А,, I этап,  корпус 1, секции 1'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.SECTION], '="1"')
    
        s = 'Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А,1 ЭТАП, корпус  1,СЕКЦ. 1'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.SECTION], '="1"')
    
        s = 'Санкт-Петербург, Фрунзенский район, улица Салова, д.61, лит.А, 1 этап, корпус 1, секци я2'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.SECTION], '="2"')
    
        s = 'Система Лизинг 24 (закрытое акционерное общество)'
        r = impo.is_person(s)
        self.assertTrue(not r)
    
        s = 'Санкт-Петербург, Василеостровский район, Невская губа, уч.28, (западнее Васильевского острова, квартал 25),2 этап,6 корпус,секция 1, в осях 5-9,М-С'
        r = impo.parseAddress(s)
        self.assertEqual(r[impo.CORPUS], '="6"')
        
        
    def test_ul_fl_december_2017(self):
        
        s = 'Садовничий Юрий Викторович'
        self.assertTrue(impo.is_person(s))
        
        s = 'Гроицкий Валерий Владимирович, Гроицкая Любовь Александровна'
        self.assertTrue(impo.is_person(s))
        
        s = 'Общество с ограниченной ответственностью "СЕВЕН САНС ДЕВЕЛОПМЕНТ СЕВЕРО-ЗАПАД"'
        self.assertFalse(impo.is_person(s))
        
        s = 'Система Лизинг 24 (закрытое акционерное общество)'
        self.assertFalse(impo.is_person(s))
        
        
        
        
    
if __name__ == '__main__':
    unittest.main()

